exit:1:threads/thread.c:617:  sema_init(&t->wait_status->dead, 0);
exit:2:userprog/exception.c:154:    thread_current ()->wait_status->exit = -1;
exit:3:userprog/process.c:63:                        &exec.wait_status->elem);
exit:4:userprog/process.c:118:    sema_down(&t->wait_status->dead);
exit:5:userprog/process.c:119:    handle = t->wait_status->exit;
exit:6:userprog/process.c:140:  printf("%s: exit(%d)\n", cur->name, cur->wait_status->exit);
exit:7:userprog/process.c:141:  sema_up(&cur->wait_status->dead);
threads/thread.c:617:  sema_init(&t->wait_status->dead, 0);
userprog/exception.c:154:    thread_current ()->wait_status->exit = -1;
userprog/process.c:75:                        &exec.wait_status->elem);
userprog/process.c:109:    lock_init(&exec->wait_status->lock);
userprog/process.c:110:    exec->wait_status->ref_count = 2;
userprog/process.c:111:    exec->wait_status->tid = thread_current()->tid;
userprog/process.c:112:    exec->wait_status->exit = -1;
userprog/process.c:113:    sema_init(&exec->wait_status->dead, 0);
userprog/process.c:147:    sema_down(&t->wait_status->dead);
userprog/process.c:148:    handle = t->wait_status->exit;
userprog/process.c:149:    //list_remove(&t->wait_status->elem);
userprog/process.c:163:  printf("%s: exit(%d)\n", cur->name, cur->wait_status->exit);
userprog/process.c:164:  sema_up(&cur->wait_status->dead);
userprog/syscall.c:179:  thread_current()->wait_status->exit = status;
